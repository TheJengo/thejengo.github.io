{"data":{"markdownRemark":{"html":"<style  type=\"text/css\">\n.gatsby-highlight pre[class*=\"language-\"].line-numbers {\n  padding-left: 2.8em;\n}\n\n.gatsby-highlight {\n  background-color: #fdf6e3;\n  border-radius: 0.3em;\n  margin: 0.5em 0;\n  padding: 1em;\n  overflow: auto;\n}\n\n.gatsby-highlight pre[class*=\"language-\"].line-numbers {\n  padding: 0;\n  padding-left: 2.8em;\n  overflow: initial;\n}\n</style>\n<p>Merhabalar ben deniz Cengiz CEBECİ, stajda tanıştığım Selenium ile ilgili sizlere öğrendiklerimi aktarmaya çalışacak ve bunu yaparken aşağıdaki teknolojileri kullanıyor olacağım. Elimden geldiğinde güzel Türkçemize sahip çıkmaya çalışacağım, iyi okumalar.</p>\n<p align=\"center\"> <img src=\"https://cdn-images-1.medium.com/max/800/1*jbHzl0qYo9vArxOq1exMgA.png\" alt=\"Ba&#x15F; roller\"> </p>\n<h3>Selenium Test Framework Nedir?</h3>\n<p>Selenium otomatize edilmiş bir şekilde web projelerinizi fonksiyonel olarak test edebileceğiniz bir Test Framework’ü olarak bilinir. Selenium ile Chrome’dan Internet Explorer’a kadar hemen hemen tüm tarayıcılar için ister tarayıcıların desteklediği uzantılar ile isterseniz masaüstü uygulaması ile isterseniz de sizin seçtiğiniz bir programlama dili ile kolayca sayfalarınızı veya herhangi bir internet sayfasını test edebilirsiniz. Peki nasıl mı?\n</p>\n<h3>Selenium ile Nasıl Test Yapılır?</h3>\n<p>\nBu yazıda sizler Selenium ile kod üzerinden yapacağımız bir örnek ile karşılaşacaksınız ve POM(Page Object Model) dediğimiz modelleme ile Selenium ile yazacağımız testleri Java ortamında JUnit Test Framework yardımıyla yazıyor olacağız.\n<br/>\nUzun lafın kısası ihtiyacımız olanlar aşağıdaki tablodadır.\n</p>\n<p align=\"center\"> <img src=\"https://cdn-images-1.medium.com/max/1000/1*tBlCJ2Lz8kg764OfCCaHIg.png\"> </p>\n<br>\n<h3>Ad&#x131;m ad&#x131;m Teste Do&#x11F;ru</h3>\n<ol>\n    <li><p>Driverlar&#x131; indirelim:<br>\n    <a href=\"https://www.seleniumhq.org/download/\">SeleniumHQ</a> sitesine girip,\n    </p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*2B8wiuU3TUStWWFHHyEoHw.png\"> </p>\n    <p>K&#x131;sm&#x131;ndan geli&#x15F;tirmek istedi&#x11F;iniz dile uygun paketleri indirerek devam edelim. Ben yukar&#x131;daki ekran g&#xF6;r&#xFC;nt&#xFC;s&#xFC;n&#xFC;n &#xFC;st&#xFC;nde yer alan Selenium Standalone Server 3.13.0 versiyonunu indirip kullan&#x131;yor olaca&#x11F;&#x131;m.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*xu1e3kdArdXS0vN0iG3SdQ.png\"> </p>\n    </li>\n    <li><p>Yok ise JUnit indirelim biz bu projemizde JUnit 4 kullan&#x131;yor olaca&#x11F;&#x131;z. <br>\n    <a href=\"https://github.com/junit-team/junit4/wiki/Download-and-Install\">https://github.com/junit-team/junit4/wiki/Download-and-Install</a> adresinden ilgili ad&#x131;mlar&#x131; takip edip indirebilir ve eclipse i&#xE7;inde bulunan plugins dosyas&#x131; i&#xE7;ine dahil edebilirsiniz. </p>\n    </li>\n    <li><p>\n    Testlerinizin &#xE7;al&#x131;&#x15F;mas&#x131;n&#x131; istedi&#x11F;iniz Taray&#x131;c&#x131;n&#x131;n s&#xFC;r&#xFC;c&#xFC;s&#xFC;n&#xFC;(driver) indirelim ve &#xE7;al&#x131;&#x15F;t&#x131;ral&#x131;m bu projede Chrome ile &#xE7;al&#x131;&#x15F;&#x131;yor olaca&#x11F;&#x131;m&#x131;z i&#xE7;in <a href=\"http://chromedriver.chromium.org/downloads\">http://chromedriver.chromium.org/downloads</a> bu linkten <b><i>&quot;Chrome_driver.exe&quot;</i></b> tarz&#x131;nda ad&#x131; olan exe dosyas&#x131;n&#x131; sisteminize uygun olan versiyonunu indirmeniz yeterlidir.\n    </p></li>\n    <li><p>\n    &#x15E;imdi yeni bir Java projesi olu&#x15F;tural&#x131;m.\n    </p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*UgdJu23Rlzr7Y-4CTNrQUQ.png\"> </p>\n    <p>Java Project se&#xE7;ili bir halde Next diyoruz.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*tab9ZIAJRXwWB5kKsmijYA.png\"> </p>\n    <p>Buraya kadar farkl&#x131; bi i&#x15F;lem yapmad&#x131;k alt&#x131; &#xFC;st&#xFC; Eclipse &#xFC;zerinde yeni bir java projesi a&#xE7;t&#x131;k. &#x15E;imdi olay buradan sonra ba&#x15F;l&#x131;yor. Yukar&#x131;daki ekrandan sonra Next tu&#x15F;una bas&#x131;nca kar&#x15F;&#x131;m&#x131;za gelen ekranda &#x2018;&#x2019;Libraries&#x2018;&#x2019; sekmesine giriyoruz ve Add Library deyip JUnit k&#xFC;t&#xFC;phanesini projemize dahil ediyoruz.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*PaXh7IQT4FdhO3M001yjyw.png\"> </p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*NdOP0ttL-Z_yo2K-9i1jgg.png\"> </p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*qH8w-3KAQAm7jddmjZUBKA.png\"> </p>\n    <p>Her &#x15F;ey haz&#x131;r oldu&#x11F;una g&#xF6;re art&#x131;k Finish deyip projemiz &#xFC;zerinde &#xE7;al&#x131;&#x15F;maya ba&#x15F;layabiliriz.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*qXpIxxBGd27v6AAhic5clw.png\"> </p>\n    <p>Finish dedikten sonra Eclipse size &#x2018;&#x2019;Bu k&#xFC;t&#xFC;phane aray&#xFC;z&#xFC;n&#xFC;zde de&#x11F;i&#x15F;iklikler yapacakt&#x131;r.&#x2019;&#x2019; diye bir uyar&#x131; veriyor. Onaylad&#x131;ktan sonra projeniz Solution Ekran&#x131;nda tahmini bu &#x15F;ekilde ba&#x15F;layacakt&#x131;r.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*anHqS-70vIXCb86rqmgsRA.png\"> </p>\n    <p>K&#x131;rm&#x131;z&#x131; daire i&#xE7;ine al&#x131;nan yer ise Eclipse&#x2019;nin sizi uyard&#x131;&#x11F;&#x131; aray&#xFC;z&#xFC; bulunduran JUnit&#x2019;e ait test sonu&#xE7;lar&#x131;n&#x131; ve durumlar&#x131;n&#x131; izleyebildi&#x11F;iniz ekrand&#x131;r.\n    <br>\n    Se&#xE7;ili olarak g&#xF6;rd&#xFC;&#x11F;&#xFC;n&#xFC;z lib dosyas&#x131;n&#x131; &#xF6;zel olarak kendimiz olu&#x15F;turuyoruz yani projeniz a&#xE7;&#x131;ld&#x131;&#x11F;&#x131; zaman &#xE7;ok b&#xFC;y&#xFC;k ihtimalle &#xF6;yle bir dosyaya sahip olmayacaks&#x131;n&#x131;z. O y&#xFC;zden projeye bir lib dosyas&#x131; ekleyelim. Bu dosyan&#x131;n i&#xE7;ine de indirdi&#x11F;imiz .jar dosyalar&#x131;n&#x131; atal&#x131;m.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*mJyxZ3TO0p3fvxdn0siibQ.png\"> </p>\n    <p>Ekledi&#x11F;iniz dosyalar&#x131; g&#xF6;rmek i&#xE7;in lib klas&#xF6;r&#xFC; &#xFC;zerine sa&#x11F; klik -&gt; Refresh yaparsan&#x131;z dosyan&#x131;z gelecektir.</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*trG20Mh0XWTW-VBvn6hjuA.png\"> </p>\n    <p>&#x130;&#x15F;lemini yapt&#x131;ktan sonra Selenium k&#xFC;t&#xFC;phanesinide projenize dahil etmi&#x15F; oldunuz. Dosyalar&#x131;n&#x131;z ve projenizin g&#xF6;r&#xFC;nt&#xFC;s&#xFC; yakla&#x15F;&#x131;k olarak &#x15F;&#xF6;yle olmas&#x131; beklenmektedir:</p>\n    <p align=\"center\">  <img src=\"https://cdn-images-1.medium.com/max/800/1*6cnQcfWmrlnvlgpYUXWSjw.png\"> </p>\n    <p>Art&#x131;k istedi&#x11F;iniz gibi testlerinizi yazabilirsiniz nas&#x131;l m&#x131;?</p>\n    </li>\n</ol>\n<br>\n<h3>Kolay Bir Ba&#x15F;lang&#x131;&#xE7;</h3>\n<p>Selenium ve olaylar&#x131; anlamak ad&#x131;na basit bir ba&#x15F;lang&#x131;&#xE7; yapal&#x131;m ve TestMain ad&#x131;nda Main fonksiyonu bulunduran bir s&#x131;n&#x131;f olu&#x15F;tural&#x131;m.\n<br>\nMain metodumuzun hemen &#xFC;st&#xFC;ne WebDriver&#x2019;&#x131;m&#x131;z&#x131;, ChromeDriver&#x2019;&#x131;m&#x131;z&#x131; ve onun exe pathini ve Driver&#x2019;&#x131;m&#x131;z&#x131; bekletmemizi sa&#x11F;layacak Wait alanlar&#x131;m&#x131;z&#x131; tan&#x131;mlayal&#x131;m:</p>\n<pre style=\"background-color:whitesmoke;color:black;\">    <code>\n    TestMain.java\n    ------------------------------------------------------------\n    package basics;\n    import java.io.File;\n    import org.openqa.selenium.WebDriver;\n    import org.openqa.selenium.chrome.ChromeDriverService;\n    import org.openqa.selenium.remote.DesiredCapabilities;\n    import org.openqa.selenium.remote.RemoteWebDriver;\n    import org.openqa.selenium.support.ui.WebDriverWait;\n    public class TestMain {\n        // &#x130;ndirdi&#x11F;imiz Chrome_driver.exe&#x2019;nizin dizini\n        protected static String ChromePath = &quot;C:\\\\Users\\\\User\\\\Downloads\\\\WebDrivers<br>\\\\Chrome\\\\chromedriver_win32\\\\chromedriver.exe&quot;;\n        // Chrome S&#xFC;r&#xFC;c&#xFC;lerinize ula&#x15F;man&#x131;z&#x131; sa&#x11F;layan servis\n        protected static ChromeDriverService service;\n        // As&#x131;l s&#xFC;r&#xFC;c&#xFC;n&#xFC;z ve Selenium size sa&#x11F;lad&#x131;&#x11F;&#x131; en b&#xFC;y&#xFC;k nimet\n        // olan bulundu&#x11F;unuz internet sayfas&#x131;ndaki\n        // elemanara(elementlere) ula&#x15F;t&#x131;&#x11F;&#x131;n&#x131;z ve tarac&#x131;y&#x131;\n        // kontrol etti&#x11F;iniz arkada&#x15F;\n        protected static WebDriver driver;\n        // Sizin i&#xE7;in s&#xFC;r&#xFC;c&#xFC;n&#xFC;z&#xFC; bekletecek &#xF6;zellik(opsiyonel)\n        protected static WebDriverWait wait;\n        // Main fonksiyonumuz\n        public static void main(String[] args) {\n        }\n    }\n</code>\n</pre>\n<p>Bu noktadan sonra Main metodu içinde bu değişkenleri kullanmadan önce onların kurulumlarını yapacağımız bir Setup() metodu oluşturup ilk atamalarını gerçekleştirelim.</p>\n<pre style=\"background-color:whitesmoke;color:black;\"><code>\n    public static void Setup(){\n        // Chrome_driver.exe dizininden servisi oluştur ve başlat\n        service = new ChromeDriverService.Builder().\n                usingDriverExecutable(new File(ChromePath)).\n                usingAnyFreePort().\n                build();\n        try {\n            service.start();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        System.setProperty(\"webdriver.chrome.driver\", ChromePath);\n        // Driver nesnesini service bilgilerini kullanarak oluştur\n        driver = new RemoteWebDriver(service.getUrl(),DesiredCapabilities.chrome());\n        // Bütün tarayıcıyı açarken 15ms bekletir\n        wait = new WebDriverWait(driver,15);\n        // Penceri Büyüt\n        driver.manage().window().maximize();\n    }\n</code></pre>\n<p>Bu metot TestMain.java dosyasının içerisinde bulunup main fonksiyonun altında yer alacaktır.\n<br/>\nOrtada bir Setup var bir şeyleri başlatıyoruz iyi hoş birde bu servisleri ve sürücüleri işlerimizi bitirdiğimiz zaman kapatmak için bir Stop() metodu da yazalım madem tam olsun.</p>\n<pre style=\"background-color:whitesmoke;color:black;\"><code>\n    public static void Stop(){\n        // Tarayıcıdan çıkış yapar\n        driver.quit();\n        // Servisi Durdurur\n        service.stop();\n    } \n</code></pre>\n<p>Sıra artık Main fonksiyonumuz içerisinde driver ile chrome üzerinde arama yaparak başlayalım devamında sonuçlardan sayfalara erişip değerler almakla veya basit aksiyonlarla ilgili olacaktır.</p>\n<h3>Google üzerinde arama yapmak</h3>\n<p>Main metodumuzu aşağıdaki şekilde doldururusak Chrome’un otomatik olarak açılıp ilgili alanlara ilgili işlemleri yaptığını göreceksiniz. </p>\n<pre style=\"background-color:whitesmoke;color:black;\"><code>\n    public static void main(String[]   args) {\n        // Tarayıcı ve servisi başlatır\n        Setup();\n        // Google   sayfasını Açar\n        driver.get(\"https://www.google.com/\");\n        // Arama kutusunun bilgilerini getirir ve bunu yaparken\n        // \"id\"sini kullanarak erişir\n        WebElement txtSearch = driver.findElement(By.id(\"lst-ib\"));\n        // Ara   butonuna “name” özelliği üzerinden erişir\n        WebElement btnSearch = driver.findElement(By.name(\"btnK\"));\n        // Arama   kutusuna aranacak değerleri gönder  \n        txtSearch.sendKeys(\"instagram thejengo\");\n        // Arama Butonuna bas\n        btnSearch.click();\n        // Veya Enter tuşuna   bas\n        // txtSearch.sendKeys(Keys.ENTER);\n        // Tarayıcı ve servisi durdurur  \n        Stop();\n    }\n</code></pre>\n<p>By.id , By.name, By.cssSelector gibi seçiciler diğer elementlere ulaşma tiplerine nazaran Selenium alt yapısında çok iyi hazırlandıkları ve köklü oldukları için daha hızlı yanıt verirler. Hatta bazen o kadar hızlı yanıt verirler ki sonraki adıma geçilene kadar bazı aksiyonlar ve animasyonlar gerçekleştiği için sayfada elementlerin değiştiği durumlarda bu durumları ‘’handle’’ edemezler. Bu tarz sorunlarda Seleniumun hızını kesmek için tabiri caizse ayağına ‘’Thread.sleep(500) ; (1000,2000)’’ gibi satırlarla taş bağlarız ki adımları atlamasın ya da sorun çıkmasın diye.</p>\n<br/>\n<h3>Googledan ulaşılan sayfa hakkında bilgi edinmek ve JUnit ile test etmek:</h3>\n<p>Şimdi işleri biraz daha ilginçleştirelim butonu şimdilik devreden çıkaralım normal bir insanmışcasına ‘’Enter’’ tuşu ile arama yaptırıp çıkan sonuçlardan birisini seçip devam edelim ve girdiğimiz sayfanın linki ile olmasını istediğimiz linki JUnit kullanarak karşılaştıralım.</p>\n<pre style=\"background-color:whitesmoke;color:black;\"><code>\npublic static void main(String[]   args) {\n      // Tarayıcı ve servisi başlatır\n      Setup();\n      // Google   sayfasını Açar\n      driver.get(\"https://www.google.com/\");\n      // Arama kutusunun bilgilerini getirir ve bunu yaparken\n      // \"id\"sini kullanarak erişir\n      WebElement txtSearch = driver.findElement(By.id(\"lst-ib\"));\n      // Ara   butonuna “name” özelliği üzerinden erişir\n      WebElement btnSearch = driver.findElement(By.name(\"btnK\"));\n      // Arama   kutusuna aranacak değerleri gönder  \n      txtSearch.sendKeys(\"instagram thejengo\");\n      // Arama Butonuna bas\n      btnSearch.click();\n      // Veya Enter tuşuna   bas\n      txtSearch.sendKeys(Keys.ENTER);\n      // Arama sonuç listesi içindeki başlıkları getir\n      List<WebElement> resultTitles =         \n                        driver.findElements(By.className(\"r”));\n      // Başlıklardan istenilene tıkla\n      resultTitles.get(0).click();\n      // Driver’ın yönlendiği adresi getir ve eldeki address ile \n      // aynı olup olmadığını JUnit kütüphanesindeki varsayım \n      // metoduyla kontrol et/test etme işlemini yapar      \n      assertEquals(\n                   driver.agetCurrtenUrl(),\n                   ”https://www.instagram.com/thejengo/”);\n      // Tarayıcı ve servisi durdurur  \n      Stop();\n}\n\n</code></pre>\n<p>\nİşte gördüğünüz gibi Selenium ve JUnit ile test yapmak Chrome, IE, Firefox gibi tarayıcılarda web projelerinizi ve fonksiyonel yönlerini kontrol etmek işte bu kadar basit buradan sonrası sizlerin yaratıcılığına kalıyor, ihtiyaçlarına kalıyor. Son olarak TestMain.java dosyamız aşağıdaki gibi gözükmektedir.\n</p>\n<pre class=\"language-java\" data-line><code>\n```Java{numberLines: true}\n    package basics;\n    import java.io.File;\n    import org.openqa.selenium.WebDriver;\n    import org.openqa.selenium.chrome.ChromeDriverService;\n    import org.openqa.selenium.remote.DesiredCapabilities;\n    import org.openqa.selenium.remote.RemoteWebDriver;\n    import org.openqa.selenium.support.ui.WebDriverWait;\n    public class TestMain {\n        // İndirdiğimiz Chrome_driver.exe’nizin dizini\n        protected static String ChromePath = \"C:\\\\Users\\\\User\\\\Downloads\\\\WebDrivers\\\\Chrome\\\\chromedriver_win32\\\\chromedriver.exe\";\n        // Chrome Sürücülerinize ulaşmanızı sağlayan servis\n        protected static ChromeDriverService service;\n        // Asıl sürücünüz ve Selenium size sağladığı en büyük nimet \n        // olan bulunduğunuz internet sayfasındaki \n        // elemanara(elementlere) ulaştığınız ve taracıyı \n        // kontrol ettiğiniz arkadaş\n        protected static WebDriver driver;\n        // Sizin için sürücünüzü bekletecek özellik(opsiyonel)\n        protected static WebDriverWait wait;\n\n    public static void main(String[]   args) {\n        // Tarayıcı ve servisi başlatır\n        Setup();\n        // Google   sayfasını Açar\n        driver.get(\"https://www.google.com/\");\n        // Arama kutusunun bilgilerini getirir ve bunu yaparken\n        // \"id\"sini kullanarak erişir\n        WebElement txtSearch = driver.findElement(By.id(\"lst-ib\"));\n        // Ara   butonuna “name” özelliği üzerinden erişir\n        WebElement btnSearch = driver.findElement(By.name(\"btnK\"));\n        // Arama   kutusuna aranacak değerleri gönder  \n        txtSearch.sendKeys(\"instagram thejengo\");\n        // Arama Butonuna bas\n        btnSearch.click();\n        // Veya Enter tuşuna   bas\n        txtSearch.sendKeys(Keys.ENTER);\n        // Arama sonuç listesi içindeki başlıkları getir\n        List<WebElement> resultTitles =            \n                            driver.findElements(By.className(\"r”));\n        // Başlıklardan istenilene tıkla\n        resultTitles.get(0).click();\n        // Driver’ın yönlendiği adresi getir ve eldeki address ile \n        // aynı olup olmadığını JUnit kütüphanesindeki varsayım \n        // metoduyla kontrol et/test etme işlemini yapar      \n        assertEquals(\n                    driver.agetCurrtenUrl(),\n                    ”https://www.instagram.com/thejengo/”);\n        // Tarayıcı ve servisi durdurur  \n        Stop();\n    }\n    public static void Setup(){\n        // Chrome_driver.exe dizininden servisi oluştur ve başlat\n        service = new ChromeDriverService.Builder().\n                usingDriverExecutable(new File(ChromePath)).\n                usingAnyFreePort().\n                build();\n        try {\n            service.start();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        System.setProperty(\"webdriver.chrome.driver\", ChromePath);\n        // Driver nesnesini service bilgilerini kullanarak oluştur\n        driver = new \n    RemoteWebDriver(service.getUrl(),DesiredCapabilities.chrome());\n        // Bütün tarayıcıyı açarken 15ms bekletir\n        wait = new WebDriverWait(driver,15);\n        // Penceri Büyüt\n        driver.manage().window().maximize();\n    }\n    public static void Stop(){\n        // Tarayıcıdan çıkış yapar\n        driver.quit();\n        // Servisi Durdurur\n        service.stop();\n    }\n}\n```\n--------------------------------------------------------------------\n</code><span class=\"line-numbers-rows\"></span></pre>\n<p>Bu kadarcık işlem sonucunda test simülasyonumuz aşağıdaki gibi olması beklenmetedir.</p>","frontmatter":{"title":"15 Dakikada Selenium İle Testlenin"}}},"pageContext":{"pathSlug":"/first-post","prev":null,"next":{"frontmatter":{"path":"/second-post","title":"My second post","tags":["shit","chat"]}}}}